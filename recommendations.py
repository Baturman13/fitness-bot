# recommendations.py
class RecommendationSystem:
    def __init__(self):
        pass
    
    def calculate_daily_needs(self, profile):
        """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É—Ç–æ—á–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è"""
        if not all([profile.get('weight'), profile.get('height'), profile.get('age'), profile.get('gender')]):
            return None
        
        weight = profile['weight']
        height = profile['height']
        age = profile['age']
        gender = profile['gender']
        activity_level = profile.get('activity_level', 'moderate')
        goal = profile.get('goal', 'maintain')
        
        # –ë–∞–∑–∞–ª—å–Ω—ã–π –º–µ—Ç–∞–±–æ–ª–∏–∑–º (—Ñ–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞)
        if gender == 'male':
            bmr = 10 * weight + 6.25 * height - 5 * age + 5
        else:
            bmr = 10 * weight + 6.25 * height - 5 * age - 161
        
        # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        activity_multipliers = {
            'sedentary': 1.2,
            'light': 1.375,
            'moderate': 1.55,
            'active': 1.725,
            'very_active': 1.9
        }
        
        tdee = bmr * activity_multipliers.get(activity_level, 1.55)
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–ª–∏
        goal_adjustments = {
            'lose': 0.85,
            'maintain': 1.0,
            'gain': 1.15
        }
        
        daily_calories = tdee * goal_adjustments.get(goal, 1.0)
        
        # –†–∞—Å—á–µ—Ç –ë–ñ–£
        protein = weight * 2.2  # 2.2–≥ –±–µ–ª–∫–∞ –Ω–∞ –∫–≥ –≤–µ—Å–∞
        fat = (daily_calories * 0.25) / 9  # 25% –æ—Ç –∫–∞–ª–æ—Ä–∏–π, 9 –∫–∫–∞–ª/–≥
        carbs = (daily_calories - (protein * 4 + fat * 9)) / 4  # –æ—Å—Ç–∞—Ç–æ–∫ –∫–∞–ª–æ—Ä–∏–π, 4 –∫–∫–∞–ª/–≥
        
        return {
            'daily_calories': round(daily_calories),
            'daily_protein': round(protein),
            'daily_fat': round(fat),
            'daily_carbs': round(carbs)
        }
    
    def generate_nutrition_recommendations(self, profile, analytics):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é"""
        recommendations = []
        
        if not profile:
            return ["–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile"]
        
        daily_needs = self.calculate_daily_needs(profile)
        if not daily_needs:
            return ["–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—Ñ–∏–ª–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤"]
        
        avg_calories = analytics.get('avg_daily_calories', 0)
        target_calories = daily_needs['daily_calories']
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞–ª–æ—Ä–∏—è–º
        if avg_calories < target_calories * 0.8:
            recommendations.append("üìâ –í—ã –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∫–∞–ª–æ—Ä–∏–π. –£–≤–µ–ª–∏—á—å—Ç–µ —Ä–∞—Ü–∏–æ–Ω –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏.")
        elif avg_calories > target_calories * 1.2:
            recommendations.append("üìà –í—ã –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–∞–ª–æ—Ä–∏–π. –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏.")
        else:
            recommendations.append("üéØ –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –∫–∞–ª–æ—Ä–∏–π! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—é
        common_foods_count = len(analytics.get('common_foods', []))
        if common_foods_count < 10:
            recommendations.append("üçé –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å —Ä–∞—Ü–∏–æ–Ω. –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Ñ—Ä—É–∫—Ç–æ–≤ –∏ –æ–≤–æ—â–µ–π.")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ü–µ–ª–∏
        goal = profile.get('goal')
        if goal == 'lose':
            recommendations.append("üíß –ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã –ø–µ—Ä–µ–¥ –µ–¥–æ–π - —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç.")
            recommendations.append("ü•ó –£–≤–µ–ª–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫–ª–µ—Ç—á–∞—Ç–∫–∏ - –æ–≤–æ—â–∏, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã.")
        elif goal == 'gain':
            recommendations.append("üí™ –£–≤–µ–ª–∏—á—å—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞ –¥–ª—è —Ä–æ—Å—Ç–∞ –º—ã—à—Ü.")
            recommendations.append("ü•ë –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∂–∏—Ä—ã: –æ—Ä–µ—Ö–∏, –∞–≤–æ–∫–∞–¥–æ, –æ–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ.")
        
        return recommendations
    
    def generate_training_recommendations(self, profile):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º"""
        if not profile:
            return ["–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π!"]
        
        recommendations = []
        goal = profile.get('goal')
        activity_level = profile.get('activity_level')
        
        if goal == 'lose':
            recommendations.append("üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: 3-5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é –ø–æ 30-45 –º–∏–Ω—É—Ç")
            recommendations.append("üí™ –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º—ã—à—Ü")
            recommendations.append("üö∂‚Äç‚ôÇÔ∏è –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 10,000 —à–∞–≥–æ–≤")
            
        elif goal == 'gain':
            recommendations.append("üèãÔ∏è‚Äç‚ôÇÔ∏è –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: 3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é, —Ñ–æ–∫—É—Å –Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—é –Ω–∞–≥—Ä—É–∑–æ–∫")
            recommendations.append("üîã –ü–∏—Ç–∞–Ω–∏–µ –¥–æ/–ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: –±–µ–ª–∫–∏ + —É–≥–ª–µ–≤–æ–¥—ã")
            recommendations.append("üí§ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: 7-9 —á–∞—Å–æ–≤ —Å–Ω–∞, –¥–Ω–∏ –æ—Ç–¥—ã—Ö–∞ –º–µ–∂–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏")
            
        else:  # maintain
            recommendations.append("‚öñÔ∏è –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: 2-3 —Å–∏–ª–æ–≤—ã—Ö + 2-3 –∫–∞—Ä–¥–∏–æ –≤ –Ω–µ–¥–µ–ª—é")
            recommendations.append("üéØ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥: —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
            recommendations.append("üßò‚Äç‚ôÇÔ∏è –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ä–∞—Å—Ç—è–∂–∫—É –∏ –º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if activity_level in ['sedentary', 'light']:
            recommendations.append("üìà –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ: 2-3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é, –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É")
        
        return recommendations
    
    def get_progress_analysis(self, profile, analytics):
        """–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not profile:
            return "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞!"
        
        current_weight = profile.get('weight')
        target_weight = profile.get('target_weight')
        goal = profile.get('goal')
        
        if not current_weight or not target_weight:
            return "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –∏ –∂–µ–ª–∞–µ–º—ã–π –≤–µ—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞!"
        
        weight_difference = current_weight - target_weight
        
        if goal == 'lose':
            if weight_difference > 0:
                return f"üéØ –î–æ —Ü–µ–ª–∏: {weight_difference:.1f}–∫–≥. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏!"
            else:
                return "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Ü–µ–ª–µ–≤–æ–≥–æ –≤–µ—Å–∞!"
        elif goal == 'gain':
            if weight_difference < 0:
                return f"üéØ –î–æ —Ü–µ–ª–∏: {abs(weight_difference):.1f}–∫–≥. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞–±–∏—Ä–∞—Ç—å –º–∞—Å—Å—É!"
            else:
                return "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Ü–µ–ª–µ–≤–æ–≥–æ –≤–µ—Å–∞!"
        
        return "‚öñÔ∏è –í—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –≤–µ—Å. –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!"