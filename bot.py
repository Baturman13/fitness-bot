import os
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import database
import nutrition_parser

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = database.Database()

def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    update.message.reply_text(
        f"üèãÔ∏è –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–Ø FitnessBot - –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç –ø–∏—Ç–∞–Ω–∏—è.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ —Ç—ã —Å—ä–µ–ª:\n"
        "‚Ä¢ '–≥—Ä–µ—á–∫–∞ 200–≥'\n" 
        "‚Ä¢ '—è–±–ª–æ–∫–æ 2 —à—Ç'\n"
        "‚Ä¢ '–ø—Ä–æ—Ç–µ–∏–Ω 1 –ª–æ–∂–∫–∞'\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/profile - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.add_user(
        user.id,
        user.username,
        user.first_name,
        user.last_name
    )

def handle_message(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        user_id = update.effective_user.id
        text = update.message.text
        
        # –ü–∞—Ä—Å–∏–º –ø–∏—Ç–∞–Ω–∏–µ
        result = nutrition_parser.parse_nutrition(text)
        
        if result:
            food_name, quantity, unit, nutrition = result
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            db.save_meal(user_id, food_name, quantity, unit, nutrition)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = (
                f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ:\n"
                f"üçΩ {food_name} - {quantity}{unit}\n"
                f"üìä –ö–∞–ª–æ—Ä–∏–∏: {nutrition['calories']} –∫–∫–∞–ª\n"
                f"ü•ö –ë–µ–ª–∫–∏: {nutrition['protein']}–≥\n"
                f"ü•ë –ñ–∏—Ä—ã: {nutrition['fat']}–≥\n" 
                f"üçö –£–≥–ª–µ–≤–æ–¥—ã: {nutrition['carbs']}–≥"
            )
        else:
            response = "‚ùå –ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–≥—Ä–µ—á–∫–∞ 200–≥'"
            
        update.message.reply_text(response)
        
    except Exception as e:
        logging.error(f"Error handling message: {e}")
        update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")

def stats_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    try:
        user_id = update.effective_user.id
        stats = db.get_user_stats(user_id, 1)  # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 1 –¥–µ–Ω—å
        
        response = (
            f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
            f"üçΩ –ö–∞–ª–æ—Ä–∏–∏: {stats['total_calories']} –∫–∫–∞–ª\n"
            f"ü•ö –ë–µ–ª–∫–∏: {stats['total_protein']}–≥\n"
            f"ü•ë –ñ–∏—Ä—ã: {stats['total_fat']}–≥\n"
            f"üçö –£–≥–ª–µ–≤–æ–¥—ã: {stats['total_carbs']}–≥\n\n"
            f"üìà –ü—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏: {stats['meal_count']}"
        )
        
        update.message.reply_text(response)
        
    except Exception as e:
        logging.error(f"Error getting stats: {e}")
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    token = os.getenv('TOKEN')
    if not token:
        logging.error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN")
        return

    # –°–æ–∑–¥–∞–µ–º updater –∏ dispatcher
    updater = Updater(token)
    dispatcher = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("stats", stats_command))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
