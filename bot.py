import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    await update.message.reply_text(
        f"üèãÔ∏è –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–Ø FitnessBot - –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç –ø–∏—Ç–∞–Ω–∏—è.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ —Ç—ã —Å—ä–µ–ª:\n"
        "‚Ä¢ '–≥—Ä–µ—á–∫–∞ 200–≥'\n" 
        "‚Ä¢ '—è–±–ª–æ–∫–æ 2 —à—Ç'\n"
        "‚Ä¢ '–ø—Ä–æ—Ç–µ–∏–Ω 1 –ª–æ–∂–∫–∞'\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        text = update.message.text
        user = update.effective_user
        
        # –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –≤–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ (–¥–ª—è –Ω–∞—á–∞–ª–∞)
        response = (
            f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {text}\n\n"
            f"–°–ø–∞—Å–∏–±–æ, {user.first_name}! –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n"
            f"–°–∫–æ—Ä–æ —è –Ω–∞—É—á—É—Å—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!"
        )
        
        await update.message.reply_text(response)
        
    except Exception as e:
        logger.error(f"Error: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    await update.message.reply_text(
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ!\n\n"
        "–°–µ–π—á–∞—Å —è –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å –∏ —É–∂–µ —Å–∫–æ—Ä–æ —Å–º–æ–≥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å:\n"
        "‚Ä¢ –ö–∞–ª–æ—Ä–∏–∏ –∑–∞ –¥–µ–Ω—å\n"
        "‚Ä¢ –ë–µ–ª–∫–∏/–∂–∏—Ä—ã/—É–≥–ª–µ–≤–æ–¥—ã\n"
        "‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ü–µ–ª—è–º"
    )

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    token = os.getenv('TOKEN')
    if not token:
        logger.error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN")
        return

    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(token).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    application.run_polling()

if __name__ == '__main__':
    main()
